nameOverride: can-docker-authn-service
fullnameOverride: ""
namespace:
  name: can-docker-authn-service
environment: staging
replicaCount: 0
timeToFinishWork: 3600
iam:
  role: arn:aws:iam::543777179833:role/eks-staging-can-{{ .Values.nameOverride }}-staging
service:
  type: ClusterIP
  port: 9010
  health_port: 9011
image:
  repository: 543777179833.dkr.ecr.eu-west-1.amazonaws.com/can-docker-authn-service
  tag: 1.0.0.482
  pullPolicy: Always
deployment:
  reloader: "true"
env:
  secrets:
    - name: CAN_OKTA_API_TOKEN
      refname: '{{ .Values.nameOverride }}'
      refkey: okta_api_token
  variables:
    - name: JAVA_OPTS
      value: -Xmx90m -Xms48m -XX:MaxMetaspaceSize=120ms
volumeMounts:
  - mountPath: /etc/can/application.yml
    name: '{{ .Values.nameOverride }}'
    subPath: application.yml
  - mountPath: /etc/can/application.properties
    name: '{{ .Values.nameOverride }}'
    subPath: application.properties
  - mountPath: /etc/can/logback.xml
    name: '{{ .Values.nameOverride }}'
    subPath: logback.xml
resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 10m
    memory: 256Mi
nodeSelector: {}
tolerations: []
affinity: {}
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
  paths:
    - /rest/accounts(.*)
    - /rest/oauth(.*)
  hosts:
    - staging.cleveranalytics.com
  tls: []
applicationProperties:
  #######################################
  ### Application specific properties ###
  #######################################
  service.name: AuthnService
  ### Okta properties ###
  # dev Okta settings
  can.okta.api.token: '{{ .Values.nameOverride }}'
  # default settings for Okta Client initialization
  can.okta.client.baseUrl: https://dev-137939.oktapreview.com
  can.okta.pkce.application.id: 0oaxkxfz3453DV09u0h7
  ### other microservices ###
  can.service.intercom.serverUrl: http://localhost:9210
  #can.service.intercom.serverUrl: https://staging.clevermaps.io

  ##############################
  ### Spring core properties ###
  ##############################
  spring.profiles.active: dev
  ### logging level configuration ###
  #logging.level.com.cleveranalytics: DEBUG
  #logging.level.org: INFO
  #logging.level.com: TRACE

  ### Logback configuration file path ###
  #logging.config: "./logback.xml"

  ### from application-common.yml ###
  spring.lifecycle.timeout-per-shutdown-phase: 60s
  ###########################
  ### Actuator properties ###
  ###########################
  management.server.port: 9011
  #management.endpoint.health.group.readiness.include:

  ### from application-common.yml ###
  management.server.add-application-context-header: false
  management.endpoint.metrics.enabled: true
  management.endpoint.prometheus.enabled: true
  management.endpoints.web.exposure.include: health,info,metrics,prometheus
  management.metrics.export.prometheus.enabled: true
  management.endpoint.health.show-details: always
  management.endpoint.health.probes.enabled: true
  management.endpoint.health.group.liveness.include: diskSpace,livenessState,logbackAppenderHealthCheck,ping,readinessState
  ################################
  ### Spring server properties ###
  ################################
  server.port: 9010
  ### from application-common.yml ###
  server.shutdown: graceful
  server.servlet.encoding.charset: UTF-8
  server.servlet.encoding.enabled: true
  server.servlet.encoding.force: true
  server.compression.enabled: true
  server.compression.mime-types: application/json,application/xml,text/html,text/xml,text/plain,text/csv
  server.error.include-message: always
  spring.hateoas.use-hal-as-default-json-media-type: false
  # Force English on Spring Bean Validation error messages.
  spring.web.locale: en_EN
  spring.web.locale-resolver: fixed
  # By default, requests that don't match any controller are redirected to DefaultErrorController (/error) where
  # response is built with correct value of 404 as "status" but with "/error" as a "path" and
  # "No message available" as a "message". This configures DispatcherServlet to throw NoHandlerFoundException
  # when no controller matches the request which. The exception is subsequently handled by common global
  # exception handling mechanism.
  spring.mvc.throw-exception-if-no-handler-found: true
  # disable adding default resource handler mapping - it would break error responses when making request to nonexistent
  # endpoint
  spring.web.resources.add-mappings: false
  # configure Spring to automaticaly resolve x-fowarded headers
  server.forward-headers-strategy: framework
  ##################################
  ### Spring security properties ###
  ##################################
  spring.security.oauth2.resourceserver.jwt.issuer-uri: https://login.staging.clevermaps.io/oauth2/ausczk34l1H71WKiU0h7
  spring.security.oauth2.client:
    registration:
      okta:
        client-id: ${can.okta.pkce.application.id}
        authorization-grant-type: refresh_token
    provider:
      okta:
        user-info-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/v1/userinfo
logbackXml: |
  {{- tpl (.Files.Get "logback.xml") . }}
