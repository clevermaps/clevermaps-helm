nameOverride: can-docker-dwh-file-service
fullnameOverride: ""
namespace:
  name: can-docker-dwh-file-service
environment: staging
replicaCount: 0
timeToFinishWork: 3600
iam:
  role: arn:aws:iam::543777179833:role/eks-staging-can-{{ .Values.nameOverride }}-staging
service:
  type: ClusterIP
  port: 9220
  health_port: 9221
image:
  repository: 543777179833.dkr.ecr.eu-west-1.amazonaws.com/can-docker-dwh-file-service
  tag: 1.0.0.399
  pullPolicy: Always
deployment:
  reloader: "true"
env:
  variables:
    - name: JAVA_OPTS
      value: -Xmx90m -Xms64m -XX:MaxMetaspaceSize=120m
volumeMounts:
  - mountPath: /etc/can/application.yml
    name: '{{ .Values.nameOverride }}'
    subPath: application.yml
  - mountPath: /etc/can/application.properties
    name: '{{ .Values.nameOverride }}'
    subPath: application.properties
  - mountPath: /etc/can/logback.xml
    name: '{{ .Values.nameOverride }}'
    subPath: logback.xml
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 10m
    memory: 256Mi
nodeSelector: {}
tolerations: []
affinity: {}
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
  paths:
    - /rest/projects/([a-z0-9]{16})/dwh/data/(.*)
  hosts:
    - staging.cleveranalytics.com
  tls: []
applicationProperties:
  #######################################
  ### Application specific properties ###
  #######################################
  service.name: DwhFileService
  can.mvc.maxPageSize: 20000
  ### AWS ###
  can.service:
    aws:
      region: eu-west-1
    dwh.file.aws:
      s3:
        dumpBucket: can-dwh-upload-dump-staging
        uploadBucket: can-dwh-upload-uploads-staging
  # TODO: remove when CAN-13200 is released and deployed on production (BEGIN)
  ### AWS S3 ###
  can.service.dwh.upload.bucket: can-dwh-upload-uploads-staging
  can.service.dwh.upload.bucket.region: eu-west-1
  # NOTE: following properties are relevant only when NOT running in profile aws-s3-iam-role-grant (does not apply for staging/production deployment)
  #can.service.dwh.upload.s3.accessKey: S3_KEY
  #can.service.dwh.upload.s3.secretKey: S3_ACCESS_KEY

  can.service.dwh.dump.bucket: can-dwh-upload-dump-staging
  can.service.dwh.dump.bucket.region: eu-west-1
  # NOTE: following properties are relevant only when NOT running in profile aws-s3-iam-role-grant (does not apply for staging/production deployment)
  #can.service.dwh.dump.s3.accessKey: S3_KEY
  #can.service.dwh.dump.s3.secretKey: S3_ACCESS_KEY
  # TODO: remove when CAN-13200 is released and deployed on production (END)

  ### other microservices ###
  can.service.project.serverUrl: http://localhost:9060
  ##############################
  ### Spring core properties ###
  ##############################
  spring.profiles.active: dev
  #spring.profiles.active: aws-iam-role-grant

  ### from application-common.yml ###
  spring.lifecycle.timeout-per-shutdown-phase: 60s
  ###########################
  ### Actuator properties ###
  ###########################
  management.server.port: 9221
  ### from application-common.yml ###
  management.server.add-application-context-header: false
  management.endpoint.metrics.enabled: true
  management.endpoint.prometheus.enabled: true
  management.endpoints.web.exposure.include: health,info,metrics,prometheus
  management.metrics.export.prometheus.enabled: true
  management.endpoint.health.show-details: always
  management.endpoint.health.probes.enabled: true
  management.endpoint.health.group.liveness.include: diskSpace,livenessState,logbackAppenderHealthCheck,ping,readinessState
  ################################
  ### Spring server properties ###
  ################################
  server.port: 9220
  ### from application-common.yml ###
  server.shutdown: graceful
  server.servlet.encoding.charset: UTF-8
  server.servlet.encoding.enabled: true
  server.servlet.encoding.force: true
  server.compression.enabled: true
  server.compression.mime-types: application/json,application/xml,text/html,text/xml,text/plain,text/csv
  server.error.include-message: always
  spring.hateoas.use-hal-as-default-json-media-type: false
  # Force English on Spring Bean Validation error messages.
  spring.web.locale: en_EN
  spring.web.locale-resolver: fixed
  # By default, requests that don't match any controller are redirected to DefaultErrorController (/error) where
  # response is built with correct value of 404 as "status" but with "/error" as a "path" and
  # "No message available" as a "message". This configures DispatcherServlet to throw NoHandlerFoundException
  # when no controller matches the request which. The exception is subsequently handled by common global
  # exception handling mechanism.
  spring.mvc.throw-exception-if-no-handler-found: true
  # disable adding default resource handler mapping - it would break error responses when making request to nonexistent
  # endpoint
  spring.web.resources.add-mappings: false
  # configure Spring to automaticaly resolve x-fowarded headers
  server.forward-headers-strategy: framework
  ##################################
  ### Spring security properties ###
  ##################################
  spring.security.oauth2.resourceserver.jwt.issuer-uri: https://login.staging.clevermaps.io/oauth2/ausczk34l1H71WKiU0h7
logbackXml: |
  {{- tpl (.Files.Get "logback.xml") . }}
