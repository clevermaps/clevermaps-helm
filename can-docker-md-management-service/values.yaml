nameOverride: can-docker-md-management-service
fullnameOverride: ""
namespace:
  name: can-docker-md-management-service
environment: staging
replicaCount: 0
timeToFinishWork: 3600
iam:
  role: arn:aws:iam::543777179833:role/eks-staging-can-{{ .Values.nameOverride }}-staging
service:
  type: ClusterIP
  health_port: 9031
image:
  repository: 543777179833.dkr.ecr.eu-west-1.amazonaws.com/can-docker-md-management-service
  tag: 1.0.0.820
  pullPolicy: Always
deployment:
  reloader: "true"
env:
  secrets:
    - name: SPRING_DATASOURCE_PASSWORD
      refname: '{{ .Values.nameOverride }}'
      refkey: spring_datasource_password
  variables:
    - name: JAVA_OPTS
      value: -Xmx70m -Xms64m -XX:MaxMetaspaceSize=120m
volumeMounts:
  - mountPath: /etc/can/application.yml
    name: '{{ .Values.nameOverride }}'
    subPath: application.yml
  - mountPath: /etc/can/application.properties
    name: '{{ .Values.nameOverride }}'
    subPath: application.properties
  - mountPath: /etc/can/logback.xml
    name: '{{ .Values.nameOverride }}'
    subPath: logback.xml
resources:
  limits:
    cpu: 500m
    memory: 400Mi
  requests:
    cpu: 10m
    memory: 320Mi
nodeSelector: {}
tolerations: []
affinity: {}
ingress:
  enabled: false
applicationProperties:
  #######################################
  ### Application specific properties ###
  #######################################
  service.name: MdManagementService
  ### AWS ###
  can.service:
    aws:
      accountId: "543777179833"
      region: eu-west-1
      stepFunctions:
        actions.workers:
          maxWorkerPoolSize: 2
    md.management.aws:
      stepFunctions:
        actions:
          createDbActivity: staging_md_create_db
          updateDbActivity: staging_md_update_db
          dropDbActivity: staging_md_drop_db
  ### data migration properties ###
  can.db.datasource.changeLog: db/changelog/db-changelog-master.xml
  # TODO: remove when CAN-13200 is released and deployed on production (BEGIN)
  ### Async AWS Step Functions ###
  can.service.md.states.createDbActivityArn: arn:aws:states:eu-west-1:543777179833:activity:staging_md_create_db
  can.service.md.states.dropDbActivityArn: arn:aws:states:eu-west-1:543777179833:activity:staging_md_drop_db
  can.service.md.states.updateDbActivityArn: arn:aws:states:eu-west-1:543777179833:activity:staging_md_update_db
  can.service.states.worker.maxWorkerPoolSize: 2
  # TODO: remove when CAN-13200 is released and deployed on production (END)
  ### other microservices ###
  can.service.project.serverUrl: http://localhost:9060
  ##############################
  ### Spring core properties ###
  ##############################
  spring.profiles.active: dev
  #spring.profiles.active: dev, aws-credentials, aws-step-functions-actions
  #spring.profiles.active: aws-iam-role-grant, aws-step-functions-actions
  spring.lifecycle.timeout-per-shutdown-phase: 60s
  # md-service DB tests are in md-management-service package, so override beans defined in *Application classes
  spring.main.allow-bean-definition-overriding: true
  ### logging level configuration ###
  logging.level.liquibase: WARN
  ###########################
  ### Actuator properties ###
  ###########################
  management.server.port: 9031
  management.server.add-application-context-header: false
  management.endpoint.metrics.enabled: true
  management.endpoint.prometheus.enabled: true
  management.endpoints.web.exposure.include: health,info,metrics,prometheus
  management.metrics.export.prometheus.enabled: true
  management.endpoint.health.show-details: always
  management.endpoint.health.probes.enabled: true
  management.endpoint.health.group.liveness.include: diskSpace,livenessState,logbackAppenderHealthCheck,ping,readinessState,createDbWorkerHealthCheck,updateDbWorkerHealthCheck,dropDbWorkerHealthCheck
  management.endpoint.health.group.readiness.include: db
  ################################
  ### Spring server properties ###
  ################################
  server.shutdown: graceful
  # do not start standard HTTP tomcat port
  server.port: -1
  ##################################
  ### Spring security properties ###
  ##################################
  spring.security.oauth2.resourceserver.jwt.issuer-uri: https://login.staging.clevermaps.io/oauth2/ausczk34l1H71WKiU0h7
  ##############################
  ### Spring data properties ###
  ##############################

  ### standard user for md management ###
  spring.datasource.driverClassName: org.postgresql.Driver
  spring.datasource.url: jdbc:postgresql://127.0.0.1:5432/
  spring.datasource.username: md_management
  spring.datasource.password: testtest
  ### settings duplicate from md-service application.yml ###
  spring.sql.init.platform: postgresql
  ### JPA ###
  spring.jpa.database: POSTGRESQL
  spring.jpa.database-platform: com.cleveranalytics.common.postgres.JsonPostgreSQLDialect
  spring.jpa.show-sql: false
  spring.jpa.generate-ddl: false
  spring.jpa.hibernate.ddl-auto: none
  # to generate ddl on start
  # spring.jpa.generate-ddl: true
  # spring.jpa.hibernate.ddl-auto: create-drop

  ########################################
  ### Spring data migration properties ###
  ########################################
  # run liquibase manually
  spring.liquibase.enabled: false
logbackXml: |
  {{- tpl (.Files.Get "logback.xml") . }}
