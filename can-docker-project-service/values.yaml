nameOverride: can-docker-project-service
fullnameOverride: ""
namespace:
  name: can-docker-project-service
environment: staging
replicaCount: 1
timeToFinishWork: 3600
iam:
  role: arn:aws:iam::543777179833:role/eks-staging-can-{{ .Values.nameOverride }}-staging
service:
  type: ClusterIP
  port: 9060
  health_port: 9061
image:
  repository: 543777179833.dkr.ecr.eu-west-1.amazonaws.com/can-docker-project-service
  tag: 1.0.0.554
  pullPolicy: Always
deployment:
  reloader: "true"
env:
  secrets:
    - name: SPRING_DATASOURCE_PASSWORD
      refname: '{{ .Values.nameOverride }}'
      refkey: spring_datasource_password
    - name: SPRING_MAIL_PASSWORD
      refname: '{{ .Values.nameOverride }}'
      refkey: can_email_smtp_password
  variables:
    - name: JAVA_OPTS
      value: -Xmx108m -Xms64m -XX:MaxMetaspaceSize=120m
volumeMounts:
  - mountPath: /etc/can/application.yml
    name: '{{ .Values.nameOverride }}'
    subPath: application.yml
  - mountPath: /etc/can/application.properties
    name: '{{ .Values.nameOverride }}'
    subPath: application.properties
  - mountPath: /etc/can/logback.xml
    name: '{{ .Values.nameOverride }}'
    subPath: logback.xml
resources:
  limits:
    cpu: 500m
    memory: 384Mi
  requests:
    cpu: 10m
    memory: 64Mi
nodeSelector: {}
tolerations: []
affinity: {}
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
  paths:
    # non-matching API requests handling
    # https://kubernetes.github.io/ingress-nginx/user-guide/ingress-path-matching/#path-priority
    # TODO: move non-matching requests handling to a dedicated service
    - /rest
    - /rest/.*
    # project service
    - /rest/projects
    - /rest/projects/(.*)
    - /rest/invitations/(.*)
    - /rest/organizations
    - /rest/organizations/(.*)
  hosts:
    - staging.cleveranalytics.com
  tls: []
applicationProperties:
  #######################################
  ### Application specific properties ###
  #######################################
  service.name: ProjectService
  can.server.public.fqdn: staging.clevermaps.io
  can.service.project.email.invitation: invitation@clevermaps.io
  can.service.project.dwhClusters: ekwdfi
  can.service.project.defaultOrganizationId: defaultOrgId123
  can.service.project.preparedProjectPoolSize: 10
  ### Async AWS Step Functions ###
  can.service.states.machine.prepareProject.name: staging_prepare_project
  can.service.states.machine.deleteProject.name: staging_delete_project
  can.service.project.states.changeProjectStatusActivityArn: arn:aws:states:eu-west-1:543777179833:activity:staging_project_change_project_status
  can.service.states.worker.maxWorkerPoolSize: 2
  can.service.aws.region: eu-west-1
  can.service.aws.accountId: "543777179833"
  # NOTE: following properties are relevant only when running in profile aws-step-functions-credentials (does not apply for staging/production deployment)
  #can.service.states.machine.accessKey: ACCESS_KEY
  #can.service.states.machine.secretKey: SECRET_KEY
  #can.service.states.worker.accessKey: AWS_KEY
  #can.service.states.worker.secretKey: AWS_SECRET_KEY

  ### other microservices ###
  #can.service.authn.serverUrl: http://localhost:9010
  can.service.authn.serverUrl: https://staging.clevermaps.io
  ##############################
  ### Spring core properties ###
  ##############################

  # use "aws-step-functions-iam-role-grant" profile to get credentials from role
  # use "aws-step-functions-credentials" profile to get credentials properties
  spring.profiles.active: dev
  ### logging level configuration ###
  #logging.level.com.zaxxer.hikari: debug
  #logging.level.com.cleveranalytics: DEBUG
  #logging.level.org: INFO
  #logging.level.com: TRACE

  ### Logback configuration file path ###
  #logging.config: "./logback.xml"

  ### from application-common.yml ###
  spring.lifecycle.timeout-per-shutdown-phase: 60s
  ###########################
  ### Actuator properties ###
  ###########################
  management.server.port: 9061
  management.endpoint.health.group.readiness.include: db,mail
  ### from application-common.yml ###
  management.server.add-application-context-header: false
  management.endpoint.metrics.enabled: true
  management.endpoint.prometheus.enabled: true
  management.endpoints.web.exposure.include: health,info,metrics,prometheus
  management.metrics.export.prometheus.enabled: true
  management.endpoint.health.show-details: always
  management.endpoint.health.probes.enabled: true
  management.endpoint.health.group.liveness.include: diskSpace,livenessState,logbackAppenderHealthCheck,ping,readinessState,changeProjectStatusWorkerHealthCheck
  ################################
  ### Spring server properties ###
  ################################
  server.port: 9060
  ### from application-common.yml ###
  server.shutdown: graceful
  server.servlet.encoding.charset: UTF-8
  server.servlet.encoding.enabled: true
  server.servlet.encoding.force: true
  server.compression.enabled: true
  server.compression.mime-types: application/json,application/xml,text/html,text/xml,text/plain,text/csv
  server.error.include-message: always
  spring.hateoas.use-hal-as-default-json-media-type: false
  # Force English on Spring Bean Validation error messages.
  spring.web.locale: en_EN
  spring.web.locale-resolver: fixed
  # By default, requests that don't match any controller are redirected to DefaultErrorController (/error) where
  # response is built with correct value of 404 as "status" but with "/error" as a "path" and
  # "No message available" as a "message". This configures DispatcherServlet to throw NoHandlerFoundException
  # when no controller matches the request which. The exception is subsequently handled by common global
  # exception handling mechanism.
  spring.mvc.throw-exception-if-no-handler-found: true
  # disable adding default resource handler mapping - it would break error responses when making request to nonexistent
  # endpoint
  spring.web.resources.add-mappings: false
  # configure Spring to automaticaly resolve x-fowarded headers
  server.forward-headers-strategy: framework
  ##################################
  ### Spring security properties ###
  ##################################
  spring.security.oauth2.resourceserver.jwt.issuer-uri: https://login.staging.clevermaps.io/oauth2/ausczk34l1H71WKiU0h7
  ##############################
  ### Spring data properties ###
  ##############################
  spring.data.rest.base-path: /rest
  ### JPA ###
  spring.datasource.driverClassName: org.postgresql.Driver
  spring.datasource.url: jdbc:postgresql://127.0.0.1:5432/projects
  spring.datasource.username: project
  spring.datasource.password: test
  ### setting for Hikari connection pool - using default values ###
  spring.datasource.hikari.minimumIdle: 10
  spring.datasource.hikari.maximumPoolSize: 10
  ########################################
  ### Spring data migration properties ###
  ########################################

  # default production setting
  spring.jpa.hibernate.ddl-auto: validate
  # development setting
  #spring.jpa.hibernate.ddl-auto: update

  spring.liquibase.changeLog: classpath:/db/changelog/db-changelog-master.xml
  spring.liquibase.parameters.type.text: TEXT
  ###############################
  ### Spring cache properties ###
  ###############################

  ### configure AWS SES for invitation email ###
  spring.mail.host: email-smtp.eu-west-1.amazonaws.com
  spring.mail.port: 465
  spring.mail.username: AKIAIXKCL5PJC3RUWDLA
  spring.mail.password: MISSING
  ### Other properties ###
  spring.mail.properties.mail.transport.protocol: smtps
  spring.mail.properties.mail.smtp.auth: true
  spring.mail.properties.mail.smtp.ssl.enable: true
logbackXml: |
  {{- tpl (.Files.Get "logback.xml") . }}
